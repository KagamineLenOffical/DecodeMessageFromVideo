#include <iostream>
#include <opencv2/opencv.hpp>
#include <cstring>
using namespace std;
using namespace cv;
bool result[10000];
int cnt=0;
const int ROW=1000;
const int COL=1000;
const int LEN=10;
bool CheckForQRpos(Mat img){
//    namedWindow("OriginalImage");
//    imshow("OriginalImage",img);
    Mat gray_img;
    cvtColor(img,gray_img,COLOR_BGR2GRAY);
    Mat threshold_img;
    threshold(gray_img,threshold_img,0,255,THRESH_BINARY|THRESH_OTSU);
//    namedWindow("ThresholdImage");
//    imshow("ThresholdImage",threshold_img);
//    waitKey(0);
    vector<vector<Point>>contours;
    vector<Vec4i>hierarchy;

    Mat dst=Mat::zeros(img.rows,img.cols,CV_8U);

    findContours(threshold_img,contours,hierarchy,RETR_TREE,CHAIN_APPROX_NONE,Point(0,0));
    int son=-1;
    int QRPoint;
    vector<vector<Point>>QRPosPoint;
    for(int i=0;i<contours.size();i++){
        if(hierarchy[i][2]!=-1){  //有子轮廓
            son=hierarchy[i][2];
            if(hierarchy[son][2]!=-1){
//                printf("%d\n",hierarchy[son][3]);
                QRPoint=i;
                RotatedRect rect;
                rect=minAreaRect(contours[i]);
                if(rect.size.width>LEN*15||rect.size.height>LEN*15)continue;//判断是否为定位点（按大小）
                QRPosPoint.push_back(contours[i]);

                drawContours(dst,contours,i,Scalar(127,127,127));
                namedWindow("ThresholdImage");
                imshow("ThresholdImage",dst);
//                printf("%d\n",threshold_img.channels());
                waitKey(0);    //中间过程显示
            }


        }
    }

    if(QRPosPoint.size()<4)return 0;
    vector<Point> res;
    for(int i=0;i<QRPosPoint.size();i++)
        for(int j=0;j<QRPosPoint[i].size();j++){
            res.push_back(QRPosPoint[i][j]);
        }
    RotatedRect rect;
    rect=minAreaRect(res);
    Point2f v[4];
    rect.points(v);
    for(int i=0;i<3;i++) {
        line(dst, v[i], v[i + 1], Scalar(127, 127, 127));
    }
    //接下来进行信息读取
    namedWindow("ThresholdImage");
    imshow("ThresholdImage",dst);
    waitKey(0);
    /*
    float minx=min(v[0].y,v[2].y),miny=min(v[0].x,v[2].x);
    float maxx=max(v[0].y,v[2].y),maxy=max(v[0].x,v[2].x);
//    printf("x:%f %f y:%f %f\n",minx,maxx,miny,maxy);
    float px=(maxx-minx)/(ROW/LEN),py=(maxy-miny)/(COL/LEN);
//    printf("px %f py %f\n",px,py);
    for (int i = 0; i < COL / LEN; i++)
        for (int j = 0; j < ROW / LEN; j++) {

            int x = int(minx+px*j), y = int(miny+py*i);
            if ((i == 0 && j == 0) || (i == COL / LEN - 1 && j == 0) || (i == 0 && j == ROW / LEN - 1)) {
                continue;
            }
            else if ((i == 0 && (j == 1 || j == ROW / LEN - 2)) ||
                       (i == 1 && (j == 0 || j == 1 || j == ROW / LEN - 2 || j == ROW / LEN - 1)) ||
                       (i == COL / LEN - 2 && (j == 0 || j == 1)) || (i == COL / LEN - 1 && j == 1)) { continue; }
            else{
                int tot=(int)px*(int)py;int avg_cnt=0;
//                printf("%d %d\n",i,j);
                namedWindow("thresholdImg");
                imshow("thresholdImg",threshold_img);
                waitKey(0);
                for(int k=0;k<(int)px;k++)
                    for(int l=0;l<(int)py;l++){
                        avg_cnt+=threshold_img.at<uchar>(x+k,y+l)>127?0:1;
                        threshold_img.at<uchar>(x+k,y+l)=0;
                    }
                float avg=(float)avg_cnt/tot;
                if(avg>0.5)result[cnt++]=1;
                else result[cnt++]=0;
            }
        }
    */
    return 1;
}
VideoCapture cap;
int main() {
    cap=VideoCapture("4.mp4");
    int fps=30;
    Mat frame;
    while(1){
        cap>>frame;
        if(CheckForQRpos(frame))break;
    }
    memset(result,0,sizeof(result));
    for(int i=0;i<7;i++)cap>>frame; //跳过前面不稳定的几帧
    cnt=0;
    while(1){
        if(frame.empty())break;
        if(!CheckForQRpos(frame))break;
        for(int i=0;i<15;i++)cap>>frame;
    }
    for(int i=0;i<cnt;i++){
        printf("%d",result[i]);
    }
    cout<<endl;
    char s[1000];
    int now=0;
    memset(s,0,sizeof(s));
    while(1){
        for(int i=now*8+7;i>=now*8;i--)s[now]=(s[now]<<1)|result[i];
        if(s[now]==0)break;
        now++;
    }
    printf("%s",s);


    waitKey(0);
    return 0;

}
